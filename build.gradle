plugins {
    id 'org.springframework.boot' version '2.6.2'
    id "io.spring.dependency-management" version '1.0.11.RELEASE'
    id "io.freefair.lombok" version "6.3.0"
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'java'
//    id 'war'
}

apply from: 'version.gradle'
group 'com.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

configurations {
    querydsl.extendsFrom implementation, compileOnly, runtimeOnly, annotationProcessor
}

ext {
    junitVersion = '5.8.2'
}

sourceCompatibility = "17"
targetCompatibility = "17"
//
//tasks.withType(JavaCompile) {
//    options.encoding = 'UTF-8'
//}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
    implementation "org.springdoc:springdoc-openapi-ui:${versions.springdoc}"
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
    compileOnly 'jakarta.servlet:jakarta.servlet-api:5.0.0'
    implementation 'org.postgresql:postgresql'
    implementation 'org.springframework.data:spring-data-envers'
    implementation 'com.querydsl:querydsl-jpa'
    implementation 'org.liquibase:liquibase-core'

    annotationProcessor 'com.querydsl:querydsl-apt'

//    implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:2.0.0'
//    implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl:2.0.0'
//    implementation 'jakarta.annotation:jakarta.annotation-api:1.3.5'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "org.testcontainers:postgresql:${versions.testcontainers}"
}

querydsl{
    jpa = true
//    library = "com.querydsl:querydsl-apt:${versions.querydsl}"
    library = "com.querydsl:querydsl-apt:${versions.querydsl}"
    querydslSourcesDir = "$buildDir/generated/sources/annotationProcessor/java/main"
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

test {
    useJUnitPlatform()
}